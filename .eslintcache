[{"C:\\Users\\SONY\\login_new\\src\\index.js":"1","C:\\Users\\SONY\\login_new\\src\\App.js":"2","C:\\Users\\SONY\\login_new\\src\\reportWebVitals.js":"3","C:\\Users\\SONY\\login_new\\src\\components\\AdminForm.js":"4","C:\\Users\\SONY\\login_new\\src\\components\\Home.js":"5","C:\\Users\\SONY\\login_new\\src\\components\\LoginForm.js":"6","C:\\Users\\SONY\\login_new\\src\\components\\LoginNew.js":"7","C:\\Users\\SONY\\login_new\\src\\components\\ProtectedRoute.js":"8","C:\\Users\\SONY\\login_new\\src\\components\\Menu\\HomePage.js":"9","C:\\Users\\SONY\\login_new\\src\\components\\Menu\\About.js":"10","C:\\Users\\SONY\\login_new\\src\\components\\Menu\\AddEmployees.js":"11","C:\\Users\\SONY\\login_new\\src\\components\\NewAdmin.js":"12","C:\\Users\\SONY\\login_new\\src\\components\\EmployeeDetails.js":"13","C:\\Users\\SONY\\login_new\\src\\components\\EditEmployee.js":"14","C:\\Users\\SONY\\login_new\\src\\components\\AddDetail.js":"15"},{"size":517,"mtime":1609208692335,"results":"16","hashOfConfig":"17"},{"size":1367,"mtime":1612581705641,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1609208692456,"results":"19","hashOfConfig":"17"},{"size":10191,"mtime":1612167986035,"results":"20","hashOfConfig":"17"},{"size":2126,"mtime":1612670513211,"results":"21","hashOfConfig":"17"},{"size":9419,"mtime":1612234079481,"results":"22","hashOfConfig":"17"},{"size":3778,"mtime":1611314262161,"results":"23","hashOfConfig":"17"},{"size":577,"mtime":1611196126443,"results":"24","hashOfConfig":"17"},{"size":190,"mtime":1611139203371,"results":"25","hashOfConfig":"17"},{"size":188,"mtime":1611139181477,"results":"26","hashOfConfig":"17"},{"size":19452,"mtime":1612266592622,"results":"27","hashOfConfig":"17"},{"size":8150,"mtime":1612773079564,"results":"28","hashOfConfig":"17"},{"size":7006,"mtime":1613188750841,"results":"29","hashOfConfig":"17"},{"size":5740,"mtime":1613190277909,"results":"30","hashOfConfig":"17"},{"size":303,"mtime":1613190266789,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1qd4hno",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SONY\\login_new\\src\\index.js",[],["68","69"],"C:\\Users\\SONY\\login_new\\src\\App.js",["70","71","72","73"],"import React from \"react\";\r\n//import LoginForm from \"./components/LoginForm\";<LoginForm />\r\nimport AdminForm from \"./components/AdminForm\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport Home from \"./components/Home\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport LoginNewForm from \"./components/LoginNew\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport About from \"./components/Menu/About\";\r\nimport Addemployees from \"./components/Menu/AddEmployees\";\r\nimport NewAdmin from \"./components/NewAdmin\";\r\nimport EmployeeDetails from \"./components/EmployeeDetails\";\r\nimport EditEmployee from \"./components/EditEmployee\";\r\n\r\nfunction App() {\r\n  //const [isAuth, setIsAuth] = useState(false);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Route exact path=\"/register-admin\" component={AdminForm} />\r\n        <Route exact path=\"/add-employee\" component={Addemployees} />\r\n        <Route exact path=\"/edit-employee\" component={EditEmployee} />\r\n\r\n        <Route exact path=\"/\" component={LoginForm} />\r\n        <Route exact path=\"/employee-details\" component={EmployeeDetails} />\r\n        <ProtectedRoute exact path=\"/homepage\" component={Home} />\r\n        {/* <ProtectedRoute exact path=\"/homepage/:id\" component={Home} /> */}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\SONY\\login_new\\src\\reportWebVitals.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\AdminForm.js",["74","75","76","77","78"],"import React from \"react\";\r\nimport \"./AdminForm.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n//import Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n//import \"date-fns\";\r\n//import DateFnsUtils from \"@date-io/date-fns\";\r\n//import { KeyboardDatePicker } from \"@material-ui/pickers\"\r\n//import \"date-fns\";\r\n//import DateFnsUtils from \"@date-io/date-fns\";\r\n// import { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nclass AdminForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(props);\r\n    this.state = {\r\n      email: \"\",\r\n      name: \"\",\r\n      password: \"\",\r\n      gender: \"\",\r\n      dob: \"\",\r\n      formErrors: {},\r\n    };\r\n    this.initialState = this.state;\r\n    this.state = { navigate: false };\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  login = function () {\r\n    return this.setState({ navigate: true });\r\n  };\r\n\r\n  handleFormValidation() {\r\n    const { name, email, dob, gender, password } = this.state;\r\n    let formErrors = {};\r\n    let formIsValid = true;\r\n\r\n    if (!name) {\r\n      formIsValid = false;\r\n      formErrors[\"NameErr\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    if (typeof name !== \"undefined\") {\r\n      if (!name.match(/^[a-zA-Z]+$/)) {\r\n        formIsValid = false;\r\n        formErrors[\"NameErr\"] = \"Only letters\";\r\n      }\r\n    }\r\n    //Email\r\n    if (!email) {\r\n      formIsValid = false;\r\n      formErrors[\"emailErr\"] = \"Email id is .\";\r\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      formIsValid = false;\r\n      formErrors[\"emailErr\"] = \"Invalid email id.\";\r\n    }\r\n\r\n    //DOB\r\n    if (!dob) {\r\n      formIsValid = false;\r\n      formErrors[\"dobErr\"] = \"Date of birth is .\";\r\n    } else {\r\n      var pattern = /^(0[1-9]|1[0-9]|2[0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/([0-9]{4})$/;\r\n      if (!pattern.test(dob)) {\r\n        formIsValid = false;\r\n        formErrors[\"dobErr\"] = \"Invalid date of birth\";\r\n      }\r\n    }\r\n\r\n    //Gender\r\n    if (gender === \"\" || gender === \"select\") {\r\n      formIsValid = false;\r\n      formErrors[\"genderErr\"] = \"Select gender.\";\r\n    }\r\n    if (!password) {\r\n      formIsValid = false;\r\n      formErrors[\"passwordErr\"] = \"Cannot be empty\";\r\n    }\r\n    this.setState({ formErrors: formErrors });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(e.target);\r\n    this.setState({ [name]: value }, console.log(this.state));\r\n    console.log(name, value);\r\n  };\r\n\r\n  handleSubmitClick = (e) => {\r\n    e.preventDefault();\r\n    alert(\"Submit\");\r\n\r\n    this.setState({ open: true });\r\n    if (this.handleFormValidation()) {\r\n      alert(\"You have been successfully registered.\");\r\n      this.setState(this.initialState);\r\n    }\r\n    const payload = {\r\n      email: this.state.email,\r\n      name: this.state.name,\r\n      password: this.state.password,\r\n    };\r\n    const apiUrl = \" http://127.0.0.1:5000/lms/admin\";\r\n    // const token =\r\n    //   \"\";\r\n    fetch(apiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization:\r\n          \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          this.props.history.push(\"/loginadmin\");\r\n          this.setState({ response: data.response, message: data.message });\r\n        }\r\n        console.log(\"This is your data\", data);\r\n        this.setState({\r\n          response: data.response,\r\n          message: data.message,\r\n          email: \"\",\r\n          password: \"\",\r\n          name: \"\",\r\n        });\r\n\r\n        //this.props.history.push(\"/loginadmin\");\r\n      })\r\n      .catch((err) => console.log(\"something went wrong\", err));\r\n  };\r\n  render() {\r\n    const { navigate } = this.state;\r\n    if (navigate) {\r\n      return <Redirect to=\"/\" push={true} />;\r\n    }\r\n\r\n    const {\r\n      NameErr,\r\n      emailErr,\r\n      dobErr,\r\n      genderErr,\r\n      passwordErr,\r\n    } = this.state.formErrors;\r\n\r\n    //console.log(this.state);\r\n    return (\r\n      <div>\r\n        {this.state.message && <p>{this.state.message}</p>}\r\n        {this.state.response && <p>{this.state.response}</p>}\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper\">\r\n            <Avatar className=\"avatar\">\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form className=\"form\">\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    autoFocus\r\n                    onChange={this.handleChange}\r\n                    className={NameErr ? \" showError\" : \"\"}\r\n                  />\r\n                  {NameErr && (\r\n                    <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                      {NameErr}\r\n                    </span>\r\n                  )}\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    onChange={this.handleChange}\r\n                    className={emailErr ? \" showError\" : \"\"}\r\n                  />\r\n                  {emailErr && (\r\n                    <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                      {emailErr}\r\n                    </span>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    id=\"date\"\r\n                    label=\"DOB\"\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    onChange={this.handleChange}\r\n                    className={dobErr ? \" showError\" : \"\"}\r\n                    fullWidth\r\n                  />\r\n                  {dobErr && (\r\n                    <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                      {dobErr}\r\n                    </span>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"select\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    name=\"gender\"\r\n                    label=\"Gender\"\r\n                    onChange={this.handleChange}\r\n                    className={genderErr ? \" showError\" : \"\"}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Men\">Men</MenuItem>\r\n                    <MenuItem value=\"women\">Women</MenuItem>\r\n                    <MenuItem value=\"others\">Others</MenuItem>\r\n                  </TextField>\r\n                  {genderErr && (\r\n                    <div style={{ color: \"red\", paddingBottom: 10 }}>\r\n                      {genderErr}\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={this.handleChange}\r\n                    className={passwordErr ? \" showError\" : \"\"}\r\n                  />\r\n                  {passwordErr && (\r\n                    <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                      {passwordErr}\r\n                    </span>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                    }\r\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"submit\"\r\n                onClick={this.handleSubmitClick}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link onClick={this.login} variant=\"body2\">\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AdminForm);\r\n","C:\\Users\\SONY\\login_new\\src\\components\\Home.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\LoginForm.js",["79"],"import React from \"react\";\r\nimport \"./LoginForm.css\";\r\n//import { browserHistory } from \"react-router\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n//import Snackbar from \"@material-ui/core/Snackbar\";\r\n//import MuiAlert from \"@material-ui/lab/Alert\";\r\n//import Box from \"@material-ui/core/Box\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n//import Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\n//import { withRouter } from \"react-router-dom\";\r\n//import TextField from \"@material-ui/core/TextField\";\r\n//import { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport AdminForm from \"./AdminForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst validEmailRegex = RegExp(\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n);\r\nconst validateForm = (errors) => {\r\n  let valid = true;\r\n  Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\r\n  return valid;\r\n};\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      open: false,\r\n    };\r\n    this.state = { navigate: false };\r\n    this.register = this.register.bind(this);\r\n  }\r\n  register = function () {\r\n    return this.setState({ navigate: true });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { id, value } = event.target;\r\n    let errors = {};\r\n\r\n    switch (id) {\r\n      case \"email\":\r\n        errors.email = validEmailRegex.test(value) ? \"\" : \"Email is not valid!\";\r\n        break;\r\n\r\n      case \"password\":\r\n        errors.password =\r\n          value.length < 8\r\n            ? \"Password must be at least 8 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    console.log(errors);\r\n    this.setState({ errors, [id]: value });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validateForm(this.state.errors)) {\r\n      console.info(\"Valid Form\");\r\n    } else {\r\n      console.error(\"Invalid Form\");\r\n    }\r\n  };\r\n\r\n  handleSubmitClick = (e) => {\r\n    e.preventDefault();\r\n    //alert(\"Submit\");\r\n    const payload = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    console.log(payload);\r\n    const apiUrl = \" http://127.0.0.1:5000/lms/loginAdmin\";\r\n    //const token =\r\n    // \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\";\r\n    fetch(apiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization:\r\n          \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          localStorage.setItem(\"token\", data.token);\r\n          //this.props.history.push(\"/homepage\");\r\n          this.setState({\r\n            response: data.response,\r\n            message: data.message,\r\n            token: data.token,\r\n            open: true,\r\n            success: data.success,\r\n          });\r\n          setTimeout(() => this.props.history.push(\"/homepage\"), 4000);\r\n        }\r\n        console.log(\"This is your data\", data);\r\n        this.setState({\r\n          response: data.response,\r\n          message: data.message,\r\n          email: \"\",\r\n          password: \"\",\r\n          open: true,\r\n          success: data.success,\r\n        });\r\n      })\r\n      .catch((err) => console.log(\"something went wrong\", err));\r\n  };\r\n  render() {\r\n    console.log(this.state);\r\n\r\n    const { navigate } = this.state;\r\n    if (navigate) {\r\n      return <Redirect to=\"/register-admin\" push={true} />;\r\n    }\r\n    // const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\r\n        {this.state.message && <p>{this.state.message}</p>}\r\n        {this.state.response && <p>{this.state.response}</p>}\r\n        {this.state.success ? (\r\n          <Snackbar\r\n            open={this.state.open}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Alert onClose={this.handleClose} severity=\"success\">\r\n              You are successfully logged in!!!\r\n            </Alert>\r\n          </Snackbar>\r\n        ) : (\r\n          <Snackbar\r\n            open={this.state.open}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Alert onClose={this.handleClose} severity=\"error\">\r\n              {this.state.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper\">\r\n            <Avatar className=\"avatar\">\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n\r\n            <form className=\"form\" onSubmit={this.handleSubmit}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  //value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n                {this.state.errors && this.state.errors.email && (\r\n                  <span className=\"error\" style={{ color: \"red\" }}>\r\n                    {this.state.errors.email}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                />\r\n                {this.state.errors && this.state.errors.email && (\r\n                  <span className=\"error\" style={{ color: \"red\" }}>\r\n                    {this.state.errors.password}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"submit\"\r\n                onClick={this.handleSubmitClick}\r\n              >\r\n                LOGIN\r\n              </Button>\r\n              {/* <Alert severity=\"success\" onSubmit={this.handleSubmit}>\r\n                Logged in!{\" \"}\r\n              </Alert> */}\r\n\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link to=\"/register\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link onClick={this.register} variant=\"body2\">\r\n                    \"Don't have an account? Sign Up\"\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        {/* <div>\r\n          <Snackbar\r\n            //open={open}\r\n            autoHideDuration={6000}\r\n            onClose={this.handleSubmitClick}\r\n          >\r\n            <Alert onClose={this.handleSubmitClick} severity=\"success\">\r\n              This is a success message!\r\n            </Alert>\r\n          </Snackbar>\r\n        </div> */}\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n          {\"Copyright © \"}\r\n          <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n            Your Website\r\n          </Link>{\" \"}\r\n          {new Date().getFullYear()}\r\n          {\".\"}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LoginForm;\r\n","C:\\Users\\SONY\\login_new\\src\\components\\LoginNew.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\Menu\\HomePage.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\Menu\\About.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\Menu\\AddEmployees.js",["80","81","82","83","84","85","86"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n//import Form from \"@material-ui/core/Form\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass Addemployees extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(props);\r\n    this.state = {\r\n      qci_id: \"\",\r\n      email: \"\",\r\n      name: \"\",\r\n      password: \"\",\r\n      gender: \"select\",\r\n      board: \"\",\r\n      designation: \"\",\r\n      type_of_employee: \"select\",\r\n      bal_cl: \"\",\r\n      bal_sl: \"\",\r\n      bal_pl: \"\",\r\n      bal_ml: \"\",\r\n      bal_ptl: \"\",\r\n      bal_eol: \"\",\r\n      formErrors: {},\r\n      open: false,\r\n\r\n      // isDisabled: true,\r\n      // errors: {\r\n      //   email: \"\",\r\n      //   firstName: \"\",\r\n      //   lastName: \"\",\r\n      //   password: \"\",\r\n      //   gender: \"\",\r\n      //   board: \"\",\r\n      //   designation: \"\",\r\n      //   type_of_employee: \"\",\r\n      //   bal_cl: \"\",\r\n      //   bal_sl: \"\",\r\n      //   bal_pl: \"\",\r\n      //   bal_ml: \"\",\r\n      //   bal_ptl: \"\",\r\n      //   bal_eol: \"\",\r\n      // },\r\n    };\r\n    this.initialState = this.state;\r\n  }\r\n  handleFormValidation() {\r\n    const {\r\n      name,\r\n      email,\r\n      gender,\r\n      board,\r\n      designation,\r\n      type_of_employee,\r\n      bal_cl,\r\n      bal_sl,\r\n      bal_pl,\r\n      bal_ml,\r\n      bal_ptl,\r\n      bal_eol,\r\n      password,\r\n    } = this.state;\r\n    let formErrors = {};\r\n    let formIsValid = true;\r\n\r\n    //Student name\r\n    // if (!name) {\r\n    //   formIsValid = false;\r\n    //   formErrors[\"NameErr\"] = \"Name is .\";\r\n    // }\r\n    if (!name) {\r\n      formIsValid = false;\r\n      formErrors[\"NameErr\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    if (typeof name !== \"undefined\") {\r\n      if (!name.match(/^[a-zA-Z]+$/)) {\r\n        formIsValid = false;\r\n        formErrors[\"NameErr\"] = \"Only letters\";\r\n      }\r\n    }\r\n    //board\r\n    if (!board) {\r\n      formIsValid = false;\r\n      formErrors[\"boardErr\"] = \"Cannot be empty\";\r\n    }\r\n    // designation\r\n    if (!designation) {\r\n      formIsValid = false;\r\n      formErrors[\"designationErr\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    if (!bal_cl) {\r\n      formIsValid = false;\r\n      formErrors[\"  bal_clErr\"] = \"Cannot be empty\";\r\n    }\r\n    if (!bal_sl) {\r\n      formIsValid = false;\r\n      formErrors[\"  bal_slErr\"] = \"Cannot be empty\";\r\n    }\r\n    if (!bal_pl) {\r\n      formIsValid = false;\r\n      formErrors[\"  bal_plErr\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    if (type_of_employee === \"\" || type_of_employee === \"select\") {\r\n      formIsValid = false;\r\n      formErrors[\"type_of_employeeErr\"] = \"Select type_of_employee.\";\r\n    }\r\n    if (!bal_ml) {\r\n      formIsValid = false;\r\n      formErrors[\" bal_mlErr\"] = \"Cannot be empty\";\r\n    }\r\n    if (!bal_ptl) {\r\n      formIsValid = false;\r\n      formErrors[\"  bal_ptlErr\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    if (!bal_eol) {\r\n      formIsValid = false;\r\n      formErrors[\"  bal_eolErr\"] = \"Cannot be empty\";\r\n    }\r\n    //Email\r\n    if (!email) {\r\n      formIsValid = false;\r\n      formErrors[\"emailErr\"] = \"Email id is .\";\r\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      formIsValid = false;\r\n      formErrors[\"emailErr\"] = \"Invalid email id.\";\r\n    }\r\n\r\n    //Gender\r\n    if (gender === \"\" || gender === \"select\") {\r\n      formIsValid = false;\r\n      formErrors[\"genderErr\"] = \"Select gender.\";\r\n    }\r\n    if (!password) {\r\n      formIsValid = false;\r\n      formErrors[\"passwordErr\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    this.setState({ formErrors: formErrors });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(e.target);\r\n    this.setState({ [name]: value }, console.log(this.state));\r\n    console.log(name, value);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleSubmitClick = (e) => {\r\n    e.preventDefault();\r\n    alert(\"Submit\");\r\n    if (this.handleFormValidation()) {\r\n      alert(\"You have been successfully registered.\");\r\n      this.setState(this.initialState);\r\n    }\r\n    const payload = {\r\n      email: this.state.email,\r\n      name: this.state.name,\r\n      qci_id: this.state.qci_id,\r\n      password: this.state.password,\r\n      gender: this.state.gender,\r\n      board: this.state.board,\r\n      designation: this.state.designation,\r\n      type_of_employee: this.state.type_of_employee,\r\n      bal_cl: this.state.bal_cl,\r\n      bal_sl: this.state.bal_sl,\r\n      bal_pl: this.state.bal_pl,\r\n      bal_ml: this.state.bal_ml,\r\n      bal_ptl: this.state.bal_pt1,\r\n      bal_eol: this.state.bal_eol,\r\n    };\r\n    console.log(payload);\r\n    const apiUrl = \" http://127.0.0.1:5000/lms/addEmployee\";\r\n    //const token =\r\n    // \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\";\r\n    fetch(apiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization:\r\n          \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          //localStorage.setItem(\"token\", data.token);\r\n          // this.props.history.push(\"/homepage\");\r\n          this.setState({\r\n            response: data.response,\r\n            message: data.message,\r\n            token: data.token,\r\n          });\r\n          // this.props.history.push(\"/homepage\");\r\n        }\r\n        console.log(\"This is your data\", data);\r\n        this.setState({\r\n          response: data.response,\r\n          message: data.message,\r\n          email: \"\",\r\n          name: \"\",\r\n          password: \"\",\r\n          gender: \"\",\r\n          board: \"\",\r\n          designation: \"\",\r\n          type_of_employee: \"\",\r\n          bal_cl: \"\",\r\n          bal_sl: \"\",\r\n          bal_pl: \"\",\r\n          bal_ml: \"\",\r\n          bal_ptl: \"\",\r\n          bal_eol: \"\",\r\n        });\r\n      })\r\n      .catch((err) => console.log(\"something went wrong\", err));\r\n  };\r\n  render() {\r\n    const {\r\n      NameErr,\r\n      emailErr,\r\n      dobErr,\r\n      genderErr,\r\n      boardErr,\r\n      designationErr,\r\n      type_of_employeeErr,\r\n      bal_eolErr,\r\n      bal_clErr,\r\n      bal_mlErr,\r\n      bal_pt1Err,\r\n      bal_plErr,\r\n      bal_slErr,\r\n      passwordErr,\r\n    } = this.state.formErrors;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.success ? (\r\n          <Snackbar\r\n            open={this.state.open}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Alert onClose={this.handleClose} severity=\"success\">\r\n              Employee added successfully!!!!\r\n            </Alert>\r\n          </Snackbar>\r\n        ) : (\r\n          <Snackbar\r\n            open={this.state.open}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Alert onClose={this.handleClose} severity=\"error\">\r\n              {this.state.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n        <Container component=\"main\" maxWidth=\"150px\">\r\n          <div>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Emplyoee Personal Details\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  label=\" name\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"given-name\"\r\n                  onChange={this.handleChange}\r\n                  className={NameErr ? \" showError\" : \"\"}\r\n                />\r\n                {NameErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {NameErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"qci_id\"\r\n                  name=\"qci_id\"\r\n                  label=\" qci_id\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"qci_id\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n\r\n              {/* <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  \r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  label=\"Last name\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"family-name\"\r\n                  onChange={this.handleChange}\r\n                  className={lastNameErr ? \" showError\" : \"\"}\r\n                />\r\n                {lastNameErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {lastNameErr}\r\n                  </span>\r\n                )}\r\n              </Grid> */}\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  label=\"Email \"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"email\"\r\n                  onChange={this.handleChange}\r\n                  className={emailErr ? \" showError\" : \"\"}\r\n                />\r\n                {emailErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {emailErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"select\"\r\n                  name=\"gender\"\r\n                  label=\"Gender\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  onChange={this.handleChange}\r\n                  className={genderErr ? \" showError\" : \"\"}\r\n                  select\r\n                >\r\n                  <MenuItem value=\"Men\">Men</MenuItem>\r\n                  <MenuItem value=\"women\">Women</MenuItem>\r\n                  <MenuItem value=\"others\">Others</MenuItem>\r\n                </TextField>\r\n                {genderErr && (\r\n                  <div style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {genderErr}\r\n                  </div>\r\n                )}\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n                <TextField\r\n                  \r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  name\r\n                  fullWidth\r\n                  id=\"address1\"\r\n                  name=\"address1\"\r\n                  label=\"Address \"\r\n                  autoComplete=\"shipping address-line1\"\r\n                />\r\n              </Grid> */}\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"board\"\r\n                  name=\"board\"\r\n                  label=\"board\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                  className={boardErr ? \" showError\" : \"\"}\r\n                />\r\n                {boardErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {boardErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"designation\"\r\n                  name=\"designation\"\r\n                  label=\"designation\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                  className={designationErr ? \" showError\" : \"\"}\r\n                />\r\n                {designationErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {designationErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid fullWidth item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"select\"\r\n                  variant=\"outlined\"\r\n                  name=\"type_of_employee\"\r\n                  margin=\"normal\"\r\n                  label=\"Type of Employee\"\r\n                  fullWidth\r\n                  onChange={this.handleChange}\r\n                  select\r\n                  className={type_of_employeeErr ? \" showError\" : \"\"}\r\n                >\r\n                  <MenuItem value=\"regular\">Regular</MenuItem>\r\n                  <MenuItem value=\"contract\">Contract</MenuItem>\r\n                  <MenuItem value=\"professional\">Professional</MenuItem>\r\n                </TextField>\r\n                {type_of_employeeErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {type_of_employeeErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"bal_cl\"\r\n                  name=\"bal_cl\"\r\n                  label=\"CL\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                  className={bal_clErr ? \" showError\" : \"\"}\r\n                />\r\n                {bal_clErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {bal_clErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"bal_sl\"\r\n                  name=\"bal_sl\"\r\n                  label=\"SL\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                  className={bal_slErr ? \" showError\" : \"\"}\r\n                />\r\n                {bal_slErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {bal_slErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"bal_pl\"\r\n                  name=\"bal_pl\"\r\n                  label=\"PL\"\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                  className={bal_plErr ? \" showError\" : \"\"}\r\n                />\r\n                {bal_plErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {bal_plErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"bal_ml\"\r\n                  name=\"bal_ml\"\r\n                  fullWidth\r\n                  label=\"ML\"\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                  className={bal_mlErr ? \" showError\" : \"\"}\r\n                />\r\n                {bal_mlErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {bal_mlErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"bal_ptl\"\r\n                  name=\"bal_ptl\"\r\n                  fullWidth\r\n                  label=\"PT1\"\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                  className={bal_pt1Err ? \" showError\" : \"\"}\r\n                />\r\n                {bal_pt1Err && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {bal_pt1Err}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"bal_eol\"\r\n                  name=\"bal_eol\"\r\n                  label=\"EOL\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                  className={bal_clErr ? \" showError\" : \"\"}\r\n                />\r\n                {bal_eolErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {bal_eolErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  label=\"password\"\r\n                  fullWidth\r\n                  autoComplete=\"password\"\r\n                  onChange={this.handleChange}\r\n                  className={passwordErr ? \" showError\" : \"\"}\r\n                />\r\n                {passwordErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {passwordErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid>\r\n              <Button\r\n                marginLeft={30}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"submit\"\r\n                // disabled={this.state.isDisabled}\r\n                onClick={this.handleSubmitClick}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              {/* <Button\r\n                marginRight={30}\r\n                type=\"save\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"save\"\r\n                // disabled={this.state.isDisabled}\r\n              >\r\n                Save\r\n              </Button> */}\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Addemployees;\r\n","C:\\Users\\SONY\\login_new\\src\\components\\NewAdmin.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\EmployeeDetails.js",["87","88","89","90","91","92","93","94","95"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EditEmployee from \"./EditEmployee\";\r\n\r\nfunction EmployeeDetails() {\r\n  const [items, setItems] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [edit, setEdit] = useState(null);\r\n  const [name, setName] = useState(\"Shermistha\");\r\n\r\n  //   const [editing, setEditing] = useState(false);\r\n  //   const initialItems = {\r\n  //     qci_id: \"\",\r\n  //     name: \"\",\r\n  //     email: \"\",\r\n  //     designation: \"\",\r\n  //     gender: \"\",\r\n  //     board: \"\",\r\n  //   };\r\n  //   const [currentDetail, setCurrentdetail] = useState(initialItems);\r\n  //   const updateUser = (id, updatedUser) => {\r\n  //     setEditing(false);\r\n\r\n  //     setItems(items.map((items) => (items.id === id ? updatedUser : items)));\r\n  //   };\r\n  //   const editRow = (item) => {\r\n  //     setEditing(true);\r\n\r\n  //     setCurrentdetail({\r\n  //       qci_id: item.qci_id,\r\n  //       name: item.name,\r\n  //       email: item.email,\r\n  //       designation: item.designation,\r\n  //       gender: item.gender,\r\n  //       board: item.board,\r\n  //     });\r\n  //   };\r\n\r\n  const handleOpen = (row) => {\r\n    console.log(row);\r\n    setOpen(true);\r\n    setEdit(row);\r\n    setName();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\");\r\n    const apiUrl = \" http://127.0.0.1:5000/lms/employeeDetails\";\r\n    //fetch(\" http://127.0.0.1:5000/lms/employeeDetails\")\r\n    fetch(apiUrl, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization:\r\n          \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        // this.setState({\r\n        //   isLoaded: true,\r\n        //   items: result.data,\r\n        // });\r\n        const items = result.data;\r\n        setItems(items);\r\n        setIsLoaded(true);\r\n      })\r\n      .catch((error) => setIsLoaded(true), setError(error));\r\n  }, []);\r\n\r\n  const deleteEmployee = (itemId) => {\r\n    //const { items } = this.state;\r\n    //alert(itemId);\r\n    console.log(itemId);\r\n    const apiUrl = \"http://127.0.0.1:5000/lms/deleteEmployee\";\r\n    // const payload = new FormData();\r\n    // payload.append(\"itemId\", itemId);\r\n    const payload = { qci_id: itemId };\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        Authorization:\r\n          \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\",\r\n      },\r\n    };\r\n\r\n    fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          //   this.setState({\r\n          //     response: result,\r\n          //     items: items.filter((row) => row.qci_id !== itemId),\r\n          //   });\r\n          console.log(result);\r\n        },\r\n        (error) => {\r\n          //   this.setState({ error });\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className=\"table\" aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>QCI_ID</TableCell>\r\n              <TableCell align=\"right\">EMAIL</TableCell>\r\n              <TableCell align=\"right\">NAME</TableCell>\r\n              <TableCell align=\"right\">DESIGNATION</TableCell>\r\n              <TableCell align=\"right\">GENDER</TableCell>\r\n              <TableCell align=\"right\">TYPE-OF-EMPLOYEE</TableCell>\r\n              <TableCell align=\"right\">BOARD</TableCell>\r\n              <TableCell align=\"right\">bal_cl</TableCell>\r\n              <TableCell align=\"right\">bal_ml</TableCell>\r\n              <TableCell align=\"right\">bal_pl</TableCell>\r\n              <TableCell align=\"right\">bal_sl</TableCell>\r\n              <TableCell align=\"right\">bal_ptl</TableCell>\r\n              <TableCell align=\"right\">bal_eol</TableCell>\r\n              <TableCell align=\"right\">Activity</TableCell>\r\n\r\n              {/* <TableCell align=\"right\">password</TableCell> */}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {items.map((row) => (\r\n              <TableRow key={row.qci_id}>\r\n                <TableCell align=\"right\">{row.qci_id}</TableCell>\r\n                <TableCell align=\"right\">{row.email}</TableCell>\r\n                <TableCell align=\"right\">{row.name}</TableCell>\r\n                <TableCell align=\"right\">{row.designation}</TableCell>\r\n                <TableCell align=\"right\">{row.gender}</TableCell>\r\n                <TableCell align=\"right\">{row.type_of_employee}</TableCell>\r\n                <TableCell align=\"right\">{row.board}</TableCell>\r\n                <TableCell align=\"right\">{row.bal_cl}</TableCell>\r\n                <TableCell align=\"right\">{row.bal_sl}</TableCell>\r\n                <TableCell align=\"right\">{row.bal_ml}</TableCell>\r\n                <TableCell align=\"right\">{row.bal_pl}</TableCell>\r\n                <TableCell align=\"right\">{row.bal_ptl}</TableCell>\r\n                <TableCell align=\"right\">{row.bal_eol}</TableCell>\r\n                {/* <TableCell align=\"right\">{row.password}</TableCell> */}\r\n                <TableCell>\r\n                  <EditIcon onClick={() => handleOpen(row)} />\r\n\r\n                  <DeleteIcon onClick={() => deleteEmployee(row.qci_id)} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <Modal\r\n          open={open}\r\n          onClose={() => handleClose()}\r\n          aria-labelledby=\"edit\"\r\n          aria-describedby=\"edit-employee details\"\r\n        >\r\n          <EditEmployee\r\n            edit={edit}\r\n            name={name}\r\n            handleClose={handleClose}\r\n            // currentDetail={currentDetail}\r\n            // setEditing={setEditing}\r\n            // updateUser={updateUser}\r\n          />\r\n        </Modal>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeDetails;\r\n","C:\\Users\\SONY\\login_new\\src\\components\\EditEmployee.js",["96","97","98"],"C:\\Users\\SONY\\login_new\\src\\components\\AddDetail.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":6,"column":35,"nodeType":"105","messageId":"106","endLine":6,"endColumn":41},{"ruleId":"103","severity":1,"message":"107","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":20},{"ruleId":"103","severity":1,"message":"108","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":13},{"ruleId":"103","severity":1,"message":"109","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":16},{"ruleId":"103","severity":1,"message":"110","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":18},{"ruleId":"103","severity":1,"message":"111","line":19,"column":8,"nodeType":"105","messageId":"106","endLine":19,"endColumn":13},{"ruleId":"103","severity":1,"message":"112","line":20,"column":8,"nodeType":"105","messageId":"106","endLine":20,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":72,"column":24,"nodeType":"115","messageId":"116","endLine":72,"endColumn":25,"suggestions":"117"},{"ruleId":"113","severity":1,"message":"114","line":72,"column":40,"nodeType":"115","messageId":"116","endLine":72,"endColumn":41,"suggestions":"118"},{"ruleId":"103","severity":1,"message":"119","line":26,"column":8,"nodeType":"105","messageId":"106","endLine":26,"endColumn":17},{"ruleId":"103","severity":1,"message":"120","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":16},{"ruleId":"103","severity":1,"message":"121","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":18},{"ruleId":"103","severity":1,"message":"122","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":22},{"ruleId":"103","severity":1,"message":"123","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":138,"column":24,"nodeType":"115","messageId":"116","endLine":138,"endColumn":25,"suggestions":"124"},{"ruleId":"113","severity":1,"message":"114","line":138,"column":40,"nodeType":"115","messageId":"116","endLine":138,"endColumn":41,"suggestions":"125"},{"ruleId":"103","severity":1,"message":"126","line":240,"column":7,"nodeType":"105","messageId":"106","endLine":240,"endColumn":13},{"ruleId":"103","severity":1,"message":"127","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":12},{"ruleId":"103","severity":1,"message":"128","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":18},{"ruleId":"103","severity":1,"message":"129","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":17},{"ruleId":"103","severity":1,"message":"130","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":14},{"ruleId":"103","severity":1,"message":"131","line":17,"column":8,"nodeType":"105","messageId":"106","endLine":17,"endColumn":16},{"ruleId":"103","severity":1,"message":"132","line":18,"column":8,"nodeType":"105","messageId":"106","endLine":18,"endColumn":17},{"ruleId":"103","severity":1,"message":"133","line":19,"column":10,"nodeType":"105","messageId":"106","endLine":19,"endColumn":20},{"ruleId":"103","severity":1,"message":"134","line":24,"column":10,"nodeType":"105","messageId":"106","endLine":24,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":92,"column":6,"nodeType":"137","endLine":92,"endColumn":8,"suggestions":"138"},{"ruleId":"103","severity":1,"message":"139","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":13},{"ruleId":"103","severity":1,"message":"140","line":55,"column":13,"nodeType":"105","messageId":"106","endLine":55,"endColumn":17},{"ruleId":"103","severity":1,"message":"141","line":55,"column":19,"nodeType":"105","messageId":"106","endLine":55,"endColumn":24},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'LoginNewForm' is defined but never used.","'About' is defined but never used.","'NewAdmin' is defined but never used.","'DatePicker' is defined but never used.","'Alert' is defined but never used.","'Snackbar' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["144","145"],["146","147"],"'AdminForm' is defined but never used.","'Checkbox' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'Select' is defined but never used.",["148","149"],["150","151"],"'dobErr' is assigned a value but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'MenuItem' is defined but never used.","'Container' is defined but never used.","'makeStyles' is defined but never used.","'isLoaded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.","ArrayExpression",["152"],"'Modal' is defined but never used.","'name' is assigned a value but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"153","fix":"154","desc":"155"},{"messageId":"156","fix":"157","desc":"158"},{"messageId":"153","fix":"159","desc":"155"},{"messageId":"156","fix":"160","desc":"158"},{"messageId":"153","fix":"161","desc":"155"},{"messageId":"156","fix":"162","desc":"158"},{"messageId":"153","fix":"163","desc":"155"},{"messageId":"156","fix":"164","desc":"158"},{"desc":"165","fix":"166"},"removeEscape",{"range":"167","text":"168"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"169","text":"170"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"171","text":"168"},{"range":"172","text":"170"},{"range":"173","text":"168"},{"range":"174","text":"170"},{"range":"175","text":"168"},{"range":"176","text":"170"},"Update the dependencies array to be: [error]",{"range":"177","text":"178"},[2380,2381],"",[2380,2380],"\\",[2396,2397],[2396,2396],[3608,3609],[3608,3608],[3624,3625],[3624,3624],[3031,3033],"[error]"]