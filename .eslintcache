[{"C:\\Users\\SONY\\login_new\\src\\index.js":"1","C:\\Users\\SONY\\login_new\\src\\App.js":"2","C:\\Users\\SONY\\login_new\\src\\reportWebVitals.js":"3","C:\\Users\\SONY\\login_new\\src\\components\\AdminForm.js":"4","C:\\Users\\SONY\\login_new\\src\\components\\Home.js":"5","C:\\Users\\SONY\\login_new\\src\\components\\LoginForm.js":"6","C:\\Users\\SONY\\login_new\\src\\components\\LoginNew.js":"7","C:\\Users\\SONY\\login_new\\src\\components\\ProtectedRoute.js":"8","C:\\Users\\SONY\\login_new\\src\\components\\Menu\\HomePage.js":"9","C:\\Users\\SONY\\login_new\\src\\components\\Menu\\About.js":"10","C:\\Users\\SONY\\login_new\\src\\components\\Menu\\AddEmployees.js":"11","C:\\Users\\SONY\\login_new\\src\\components\\NewAdmin.js":"12","C:\\Users\\SONY\\login_new\\src\\components\\EmployeeDetails.js":"13"},{"size":517,"mtime":1609208692335,"results":"14","hashOfConfig":"15"},{"size":1238,"mtime":1611815371042,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1609208692456,"results":"17","hashOfConfig":"15"},{"size":10081,"mtime":1611753089280,"results":"18","hashOfConfig":"15"},{"size":1839,"mtime":1611820239788,"results":"19","hashOfConfig":"15"},{"size":8244,"mtime":1611750920780,"results":"20","hashOfConfig":"15"},{"size":3778,"mtime":1611314262161,"results":"21","hashOfConfig":"15"},{"size":577,"mtime":1611196126443,"results":"22","hashOfConfig":"15"},{"size":190,"mtime":1611139203371,"results":"23","hashOfConfig":"15"},{"size":188,"mtime":1611139181477,"results":"24","hashOfConfig":"15"},{"size":16109,"mtime":1611802560981,"results":"25","hashOfConfig":"15"},{"size":568,"mtime":1611745672413,"results":"26","hashOfConfig":"15"},{"size":1042,"mtime":1611820728991,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qd4hno",{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SONY\\login_new\\src\\index.js",[],["58","59"],"C:\\Users\\SONY\\login_new\\src\\App.js",["60","61","62","63"],"C:\\Users\\SONY\\login_new\\src\\reportWebVitals.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\AdminForm.js",["64","65","66","67"],"import React from \"react\";\r\nimport \"./AdminForm.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n//import Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n//import \"date-fns\";\r\n//import DateFnsUtils from \"@date-io/date-fns\";\r\n//import { KeyboardDatePicker } from \"@material-ui/pickers\"\r\n//import \"date-fns\";\r\n//import DateFnsUtils from \"@date-io/date-fns\";\r\n// import { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nconst validEmailRegex = RegExp(\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n);\r\n// const validDateofBirth = RegExp(\r\n//   /^(0[1-9]|1[0-9]|2[0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/([0-9]{4})$/\r\n// );\r\nconst validateForm = (errors) => {\r\n  let valid = true;\r\n  Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\r\n  return valid;\r\n};\r\n// const [selectedDate, setSelectedDate] = this.setState(\r\n//   new Date(\"2014-08-18T21:11:54\")\r\n// );\r\n\r\n// const handleDateChange = (date) => {\r\n//   setSelectedDate(date);\r\n// };\r\n\r\nclass AdminForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(props);\r\n    this.state = {\r\n      email: \"\",\r\n      name: \"\",\r\n      password: \"\",\r\n      gender: \"\",\r\n      errors: {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n    };\r\n    this.state = { navigate: false };\r\n    this.login = this.login.bind(this);\r\n  }\r\n  login = function () {\r\n    return this.setState({ navigate: true });\r\n  };\r\n  // handleChange = (e) => {\r\n  //   const { id, value } = e.target;\r\n  //   this.setState((prevState) => ({\r\n  //     ...prevState,\r\n  //     [id]: value,\r\n  //   }));\r\n  // };\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { id, value } = event.target;\r\n    let errors = this.state.errors;\r\n\r\n    switch (id) {\r\n      case \"name\":\r\n        errors.name =\r\n          value.length < 5 ? \"Name must be at least 5 characters long!\" : \"\";\r\n        break;\r\n      case \"email\":\r\n        errors.email = validEmailRegex.test(value) ? \"\" : \"Email is not valid!\";\r\n        break;\r\n      // case \"dob\":\r\n      //   errors.dob = validDateofBirth.test(value) ? \"\" : \"DOB is invalid!\";\r\n      //   break;\r\n      case \"password\":\r\n        errors.password =\r\n          value.length < 8\r\n            ? \"Password must be at least 8 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors, [id]: value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validateForm(this.state.errors)) {\r\n      console.info(\"Valid Form\");\r\n    } else {\r\n      console.error(\"Invalid Form\");\r\n    }\r\n  };\r\n\r\n  handleSubmitClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ open: true });\r\n    const payload = {\r\n      email: this.state.email,\r\n      name: this.state.name,\r\n      password: this.state.password,\r\n    };\r\n    const apiUrl = \" http://127.0.0.1:5000/lms/admin\";\r\n    // const token =\r\n    //   \"\";\r\n    fetch(apiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization:\r\n          \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          this.props.history.push(\"/loginadmin\");\r\n          this.setState({ response: data.response, message: data.message });\r\n        }\r\n        console.log(\"This is your data\", data);\r\n        this.setState({\r\n          response: data.response,\r\n          message: data.message,\r\n          email: \"\",\r\n          password: \"\",\r\n          name: \"\",\r\n        });\r\n\r\n        //this.props.history.push(\"/loginadmin\");\r\n      })\r\n      .catch((err) => console.log(\"something went wrong\", err));\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { navigate } = this.state;\r\n    if (navigate) {\r\n      return <Redirect to=\"/\" push={true} />;\r\n    }\r\n\r\n    //console.log(this.state);\r\n    return (\r\n      <div>\r\n        {this.state.message && <p>{this.state.message}</p>}\r\n        {this.state.response && <p>{this.state.response}</p>}\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper\">\r\n            <Avatar className=\"avatar\">\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form className=\"form\" onSubmit={this.handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    autoFocus\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  {this.state.errors && this.state.errors.name && (\r\n                    <span className=\"error\" style={{ color: \"red\" }}>\r\n                      {this.state.errors.name}\r\n                    </span>\r\n                  )}\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  {this.state.errors && this.state.errors.email && (\r\n                    <span className=\"error\" style={{ color: \"red\" }}>\r\n                      {this.state.errors.email}\r\n                    </span>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    id=\"date\"\r\n                    label=\"DOB\"\r\n                    type=\"date\"\r\n                    defaultValue=\"0000-00-00\"\r\n                    className=\"DOB\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"select\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    name=\"gender\"\r\n                    label=\"Gender\"\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Men\">Men</MenuItem>\r\n                    <MenuItem value=\"women\">Women</MenuItem>\r\n                    <MenuItem value=\"others\">Others</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  {this.state.errors && this.state.errors.password && (\r\n                    <span className=\"error\" style={{ color: \"red\" }}>\r\n                      {this.state.errors.password}\r\n                    </span>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                    }\r\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"submit\"\r\n                onClick={this.handleSubmitClick}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link onClick={this.login} variant=\"body2\">\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n              Your Website\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AdminForm);\r\n","C:\\Users\\SONY\\login_new\\src\\components\\Home.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\LoginForm.js",["68","69"],"import React from \"react\";\r\nimport \"./LoginForm.css\";\r\n//import { browserHistory } from \"react-router\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n//import Snackbar from \"@material-ui/core/Snackbar\";\r\n//import MuiAlert from \"@material-ui/lab/Alert\";\r\n//import Box from \"@material-ui/core/Box\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n//import Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\n//import { withRouter } from \"react-router-dom\";\r\n//import TextField from \"@material-ui/core/TextField\";\r\n//import { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport AdminForm from \"./AdminForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst validEmailRegex = RegExp(\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n);\r\nconst validateForm = (errors) => {\r\n  let valid = true;\r\n  Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\r\n  return valid;\r\n};\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n    };\r\n    this.state = { navigate: false };\r\n    this.register = this.register.bind(this);\r\n  }\r\n  register = function () {\r\n    return this.setState({ navigate: true });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { id, value } = event.target;\r\n    let errors = {};\r\n\r\n    switch (id) {\r\n      case \"email\":\r\n        errors.email = validEmailRegex.test(value) ? \"\" : \"Email is not valid!\";\r\n        break;\r\n\r\n      case \"password\":\r\n        errors.password =\r\n          value.length < 8\r\n            ? \"Password must be at least 8 characters long!\"\r\n            : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    console.log(errors);\r\n    this.setState({ errors, [id]: value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validateForm(this.state.errors)) {\r\n      console.info(\"Valid Form\");\r\n    } else {\r\n      console.error(\"Invalid Form\");\r\n    }\r\n  };\r\n\r\n  handleSubmitClick = (e) => {\r\n    e.preventDefault();\r\n    //alert(\"Submit\");\r\n    const payload = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    console.log(payload);\r\n    const apiUrl = \" http://127.0.0.1:5000/lms/loginAdmin\";\r\n    //const token =\r\n    // \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\";\r\n    fetch(apiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization:\r\n          \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          localStorage.setItem(\"token\", data.token);\r\n          this.props.history.push(\"/homepage\");\r\n          this.setState({\r\n            response: data.response,\r\n            message: data.message,\r\n            token: data.token,\r\n          });\r\n          this.props.history.push(\"/homepage\");\r\n        }\r\n        console.log(\"This is your data\", data);\r\n        this.setState({\r\n          response: data.response,\r\n          message: data.message,\r\n          email: \"\",\r\n          password: \"\",\r\n        });\r\n      })\r\n      .catch((err) => console.log(\"something went wrong\", err));\r\n  };\r\n  render() {\r\n    console.log(this.state);\r\n\r\n    const { navigate } = this.state;\r\n    if (navigate) {\r\n      return <Redirect to=\"/register-admin\" push={true} />;\r\n    }\r\n    // const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\r\n        {this.state.message && <p>{this.state.message}</p>}\r\n        {this.state.response && <p>{this.state.response}</p>}\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper\">\r\n            <Avatar className=\"avatar\">\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n\r\n            <form className=\"form\" onSubmit={this.handleSubmit}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n                {this.state.errors && this.state.errors.email && (\r\n                  <span className=\"error\" style={{ color: \"red\" }}>\r\n                    {this.state.errors.email}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                />\r\n                {this.state.errors && this.state.errors.email && (\r\n                  <span className=\"error\" style={{ color: \"red\" }}>\r\n                    {this.state.errors.password}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"submit\"\r\n                onClick={this.handleSubmitClick}\r\n              >\r\n                LOGIN\r\n              </Button>\r\n              {/* <Alert severity=\"success\" onSubmit={this.handleSubmit}>\r\n                Logged in!{\" \"}\r\n              </Alert> */}\r\n\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link to=\"/register\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link onClick={this.register} variant=\"body2\">\r\n                    \"Don't have an account? Sign Up\"\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        {/* <div>\r\n          <Snackbar\r\n            //open={open}\r\n            autoHideDuration={6000}\r\n            onClose={this.handleSubmitClick}\r\n          >\r\n            <Alert onClose={this.handleSubmitClick} severity=\"success\">\r\n              This is a success message!\r\n            </Alert>\r\n          </Snackbar>\r\n        </div> */}\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n          {\"Copyright © \"}\r\n          <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n            Your Website\r\n          </Link>{\" \"}\r\n          {new Date().getFullYear()}\r\n          {\".\"}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LoginForm;\r\n","C:\\Users\\SONY\\login_new\\src\\components\\LoginNew.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\Menu\\HomePage.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\Menu\\About.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\Menu\\AddEmployees.js",["70","71","72","73","74","75","76","77"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n//import Form from \"@material-ui/core/Form\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nclass Addemployees extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(props);\r\n    this.state = {\r\n      qci_id: \"\",\r\n      email: \"\",\r\n      Name: \"\",\r\n      password: \"\",\r\n      gender: \"select\",\r\n      board: \"\",\r\n      designation: \"\",\r\n      type_of_employee: \"select\",\r\n      bal_cl: \"\",\r\n      bal_sl: \"\",\r\n      bal_pl: \"\",\r\n      bal_ml: \"\",\r\n      bal_ptl: \"\",\r\n      bal_eol: \"\",\r\n      formErrors: {},\r\n\r\n      // isDisabled: true,\r\n      // errors: {\r\n      //   email: \"\",\r\n      //   firstName: \"\",\r\n      //   lastName: \"\",\r\n      //   password: \"\",\r\n      //   gender: \"\",\r\n      //   board: \"\",\r\n      //   designation: \"\",\r\n      //   type_of_employee: \"\",\r\n      //   bal_cl: \"\",\r\n      //   bal_sl: \"\",\r\n      //   bal_pl: \"\",\r\n      //   bal_ml: \"\",\r\n      //   bal_ptl: \"\",\r\n      //   bal_eol: \"\",\r\n      // },\r\n    };\r\n    this.initialState = this.state;\r\n  }\r\n  handleFormValidation() {\r\n    const { firstName, lastName, email, dob, gender } = this.state;\r\n    let formErrors = {};\r\n    let formIsValid = true;\r\n\r\n    //Student name\r\n    if (!firstName) {\r\n      formIsValid = false;\r\n      formErrors[\"firstNameErr\"] = \"firstName is required.\";\r\n    }\r\n    if (!lastName) {\r\n      formIsValid = false;\r\n      formErrors[\"lastNameErr\"] = \"lastName is required.\";\r\n    }\r\n\r\n    //Email\r\n    if (!email) {\r\n      formIsValid = false;\r\n      formErrors[\"emailErr\"] = \"Email id is required.\";\r\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      formIsValid = false;\r\n      formErrors[\"emailErr\"] = \"Invalid email id.\";\r\n    }\r\n\r\n    //DOB\r\n    if (!dob) {\r\n      formIsValid = false;\r\n      formErrors[\"dobErr\"] = \"Date of birth is required.\";\r\n    } else {\r\n      var pattern = /^(0[1-9]|1[0-9]|2[0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/([0-9]{4})$/;\r\n      if (!pattern.test(dob)) {\r\n        formIsValid = false;\r\n        formErrors[\"dobErr\"] = \"Invalid date of birth\";\r\n      }\r\n    }\r\n\r\n    //Gender\r\n    if (gender === \"\" || gender === \"select\") {\r\n      formIsValid = false;\r\n      formErrors[\"genderErr\"] = \"Select gender.\";\r\n    }\r\n\r\n    this.setState({ formErrors: formErrors });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value }, console.log(this.state));\r\n    console.log(name, value);\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.handleFormValidation()) {\r\n      alert(\"You have been successfully registered.\");\r\n      this.setState(this.initialState);\r\n    }\r\n  };\r\n\r\n  // handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   if (validateForm(this.state.errors)) {\r\n  //     console.info(\"Valid Form\");\r\n  //   } else {\r\n  //     console.error(\"Invalid Form\");\r\n  //   }\r\n  // };\r\n  handleSubmitClick = (e) => {\r\n    e.preventDefault();\r\n    //alert(\"Submit\");\r\n    const payload = {\r\n      email: this.state.email,\r\n      name: this.state.Name,\r\n      qci_id: this.state.qci_id,\r\n      password: this.state.password,\r\n      gender: this.state.gender,\r\n      board: this.state.board,\r\n      designation: this.state.designation,\r\n      type_of_employee: this.state.type_of_employee,\r\n      bal_cl: this.state.bal_cl,\r\n      bal_sl: this.state.bal_sl,\r\n      bal_pl: this.state.bal_pl,\r\n      bal_ml: this.state.bal_ml,\r\n      bal_ptl: this.state.bal_pt1,\r\n      bal_eol: this.state.bal_eol,\r\n    };\r\n    console.log(payload);\r\n    const apiUrl = \" http://127.0.0.1:5000/lms/addEmployee\";\r\n    //const token =\r\n    // \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\";\r\n    fetch(apiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization:\r\n          \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEyMzR9.AkulsG22blITRUe4-iROKG25EIqT8H2-5HXLT93nQXc\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          //localStorage.setItem(\"token\", data.token);\r\n          // this.props.history.push(\"/homepage\");\r\n          this.setState({\r\n            response: data.response,\r\n            message: data.message,\r\n            token: data.token,\r\n          });\r\n          // this.props.history.push(\"/homepage\");\r\n        }\r\n        console.log(\"This is your data\", data);\r\n        this.setState({\r\n          response: data.response,\r\n          message: data.message,\r\n          email: \"\",\r\n          name: \"\",\r\n          password: \"\",\r\n          gender: \"\",\r\n          board: \"\",\r\n          designation: \"\",\r\n          type_of_employee: \"\",\r\n          bal_cl: \"\",\r\n          bal_sl: \"\",\r\n          bal_pl: \"\",\r\n          bal_ml: \"\",\r\n          bal_ptl: \"\",\r\n          bal_eol: \"\",\r\n        });\r\n      })\r\n      .catch((err) => console.log(\"something went wrong\", err));\r\n  };\r\n  render() {\r\n    const {\r\n      firstNameErr,\r\n      lastNameErr,\r\n      emailErr,\r\n      dobErr,\r\n      genderErr,\r\n    } = this.state.formErrors;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Container component=\"main\" maxWidth=\"150px\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Emplyoee Personal Details\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"Name\"\r\n                  name=\"Name\"\r\n                  label=\" name\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"given-name\"\r\n                  onChange={this.handleChange}\r\n                  className={firstNameErr ? \" showError\" : \"\"}\r\n                />\r\n                {firstNameErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {firstNameErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"qci_id\"\r\n                  name=\"qci_id\"\r\n                  label=\" qci_id\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"qci_id\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n\r\n              {/* <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  label=\"Last name\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"family-name\"\r\n                  onChange={this.handleChange}\r\n                  className={lastNameErr ? \" showError\" : \"\"}\r\n                />\r\n                {lastNameErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {lastNameErr}\r\n                  </span>\r\n                )}\r\n              </Grid> */}\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  label=\"Email \"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"email\"\r\n                  onChange={this.handleChange}\r\n                  className={emailErr ? \" showError\" : \"\"}\r\n                />\r\n                {emailErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {emailErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"date\"\r\n                  name=\"dob\"\r\n                  label=\"DOB\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"date\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={this.handleChange}\r\n                  className={dobErr ? \" showError\" : \"\"}\r\n                  fullWidth\r\n                />\r\n                {dobErr && (\r\n                  <span style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {dobErr}\r\n                  </span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"select\"\r\n                  name=\"gender\"\r\n                  label=\"Gender\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  onChange={this.handleChange}\r\n                  select\r\n                >\r\n                  <MenuItem value=\"Men\">Men</MenuItem>\r\n                  <MenuItem value=\"women\">Women</MenuItem>\r\n                  <MenuItem value=\"others\">Others</MenuItem>\r\n                </TextField>\r\n                {genderErr && (\r\n                  <div style={{ color: \"red\", paddingBottom: 10 }}>\r\n                    {genderErr}\r\n                  </div>\r\n                )}\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  name\r\n                  fullWidth\r\n                  id=\"address1\"\r\n                  name=\"address1\"\r\n                  label=\"Address \"\r\n                  autoComplete=\"shipping address-line1\"\r\n                />\r\n              </Grid> */}\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"board\"\r\n                  name=\"board\"\r\n                  label=\"board\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"designation\"\r\n                  name=\"designation\"\r\n                  label=\"designation\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid fullWidth item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"select\"\r\n                  variant=\"outlined\"\r\n                  name=\"type_of_employee\"\r\n                  margin=\"normal\"\r\n                  label=\"Type of Employee\"\r\n                  fullWidth\r\n                  onChange={this.handleChange}\r\n                  select\r\n                >\r\n                  <MenuItem value=\"regular\">Regular</MenuItem>\r\n                  <MenuItem value=\"contract\">Contract</MenuItem>\r\n                  <MenuItem value=\"professional\">Professional</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"bal_cl\"\r\n                  name=\"bal_cl\"\r\n                  label=\"CL\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"bal_sl\"\r\n                  name=\"bal_sl\"\r\n                  label=\"SL\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"bal_pl\"\r\n                  name=\"bal_pl\"\r\n                  label=\"PL\"\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"bal_ml\"\r\n                  name=\"bal_ml\"\r\n                  fullWidth\r\n                  label=\"ML\"\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"bal_ptl\"\r\n                  name=\"bal_ptl\"\r\n                  fullWidth\r\n                  label=\"PT1\"\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"bal_eol\"\r\n                  name=\"bal_eol\"\r\n                  label=\"EOL\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  label=\"password\"\r\n                  fullWidth\r\n                  autoComplete=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              {this.state.passwordError ? (\r\n                <span style={{ color: \"red\" }}>Please enter some value</span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Grid>\r\n            <Grid>\r\n              <Button\r\n                marginLeft={30}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"submit\"\r\n                // disabled={this.state.isDisabled}\r\n                onClick={this.handleSubmitClick}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              {/* <Button\r\n                marginRight={30}\r\n                type=\"save\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"save\"\r\n                // disabled={this.state.isDisabled}\r\n              >\r\n                Save\r\n              </Button> */}\r\n            </Grid>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Addemployees;\r\n","C:\\Users\\SONY\\login_new\\src\\components\\NewAdmin.js",[],"C:\\Users\\SONY\\login_new\\src\\components\\EmployeeDetails.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":6,"column":35,"nodeType":"84","messageId":"85","endLine":6,"endColumn":41},{"ruleId":"82","severity":1,"message":"86","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":20},{"ruleId":"82","severity":1,"message":"87","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":13},{"ruleId":"82","severity":1,"message":"88","line":11,"column":8,"nodeType":"84","messageId":"85","endLine":11,"endColumn":16},{"ruleId":"82","severity":1,"message":"89","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":18},{"ruleId":"82","severity":1,"message":"90","line":19,"column":8,"nodeType":"84","messageId":"85","endLine":19,"endColumn":13},{"ruleId":"82","severity":1,"message":"91","line":20,"column":8,"nodeType":"84","messageId":"85","endLine":20,"endColumn":16},{"ruleId":"82","severity":1,"message":"92","line":156,"column":13,"nodeType":"84","messageId":"85","endLine":156,"endColumn":19},{"ruleId":"82","severity":1,"message":"90","line":24,"column":8,"nodeType":"84","messageId":"85","endLine":24,"endColumn":13},{"ruleId":"82","severity":1,"message":"93","line":25,"column":8,"nodeType":"84","messageId":"85","endLine":25,"endColumn":17},{"ruleId":"82","severity":1,"message":"94","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":24},{"ruleId":"82","severity":1,"message":"95","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":16},{"ruleId":"82","severity":1,"message":"96","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":18},{"ruleId":"82","severity":1,"message":"97","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":22},{"ruleId":"82","severity":1,"message":"98","line":11,"column":8,"nodeType":"84","messageId":"85","endLine":11,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":75,"column":24,"nodeType":"101","messageId":"102","endLine":75,"endColumn":25,"suggestions":"103"},{"ruleId":"99","severity":1,"message":"100","line":75,"column":40,"nodeType":"101","messageId":"102","endLine":75,"endColumn":41,"suggestions":"104"},{"ruleId":"82","severity":1,"message":"105","line":192,"column":7,"nodeType":"84","messageId":"85","endLine":192,"endColumn":18},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'LoginNewForm' is defined but never used.","'About' is defined but never used.","'NewAdmin' is defined but never used.","'DatePicker' is defined but never used.","'Alert' is defined but never used.","'Snackbar' is defined but never used.","'errors' is assigned a value but never used.","'AdminForm' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'Select' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["108","109"],["110","111"],"'lastNameErr' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"112","fix":"113","desc":"114"},{"messageId":"115","fix":"116","desc":"117"},{"messageId":"112","fix":"118","desc":"114"},{"messageId":"115","fix":"119","desc":"117"},"removeEscape",{"range":"120","text":"121"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"122","text":"123"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"124","text":"121"},{"range":"125","text":"123"},[2148,2149],"",[2148,2148],"\\",[2164,2165],[2164,2164]]